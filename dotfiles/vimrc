set nocompatible

" vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

silent! call plug#begin('~/.vim/plugged')

Plug 'preservim/nerdtree'
Plug 'preservim/nerdcommenter'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'flazz/vim-colorschemes'

call plug#end()

syntax on
set hidden
set number
set ruler
set ignorecase
set smartcase
set incsearch
set hlsearch
set expandtab
set showmatch
set encoding=utf-8
set background=dark
set backspace=indent,eol,start
set scrolloff=5

set backupdir=/tmp//
set directory=/tmp//

filetype plugin indent on

colorscheme desert

nnoremap j gj
nnoremap k gk

" Highlight/Clear trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red

autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufRead,InsertLeave * match ExtraWhitespace /\s\+$/

function! Trim()
  %s/\s*$//
  ''
endfunction
command! -nargs=0 Trim :call Trim()
nnoremap <silent> <Leader>cw :Trim<CR>

" NERDTree
map <silent> <LocalLeader>nt :NERDTreeToggle<CR>
map <silent> <LocalLeader>nr :NERDTree<CR>
map <silent> <LocalLeader>nf :NERDTreeFind<CR>

" NERDCommenter
map <silent> <leader>c<space <plug>NERDCommenterComment
map <silent> <leader>cc <plug>NERDCommenterToggle

" fzf
map <silent> <leader>ff :Files<CR>
map <silent> <leader>fb :Buffers<CR>
let g:fzf_action = {
      \ 'ctrl-t': 'tab split',
      \ 'ctrl-x': 'split',
      \ 'ctrl-s': 'split',
      \ 'ctrl-v': 'vsplit'  }
